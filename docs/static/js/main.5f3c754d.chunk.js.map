{"version":3,"sources":["components/AddCategory.js","data/query.js","helpers/getFetchGifs.js","components/GifGridItem.js","components/GifGrid.js","hooks/useFetchGifs.js","GifExpertApp.js","index.js"],"names":["AddCategory","setCategories","useState","inputValue","setInputValue","onSubmit","e","preventDefault","trim","length","categories","type","value","onChange","target","onePiece","id","title","url","getFetchGifs","category","a","encodeURI","dataGif","fetch","resp","json","data","console","warn","gifs","map","img","images","downsized_medium","GifGridItem","className","src","alt","GifGrid","loading","state","setState","useEffect","then","imgs","useFetchGifs","GifExpertApp","ReactDOM","render","document","getElementById"],"mappings":"qLAGaA,EAAc,SAAC,GAAuB,IAArBC,EAAoB,EAApBA,cAE1B,EAAoCC,mBAAS,IAA7C,mBAAOC,EAAP,KAAmBC,EAAnB,KAgBA,OACI,sBAAMC,SAXW,SAACC,GAElBA,EAAEC,iBAEGJ,EAAWK,OAAOC,OAAS,IAC5BR,GAAe,SAAAS,GAAU,OAAKP,GAAL,mBAAoBO,OAC7CN,EAAc,MAKlB,SACI,uBACIO,KAAK,OACLC,MAAQT,EACRU,SAnBW,SAACP,GACpBF,EAAcE,EAAEQ,OAAOF,a,+BCRlBG,EAAW,CACpB,CACIC,GAAI,gBACJC,MAAO,gBACPC,IAAK,kIAET,CACIF,GAAI,qBACJC,MAAO,qCACPC,IAAK,uIAET,CACIF,GAAI,qBACJC,MAAO,iDACPC,IAAK,uIAET,CACIF,GAAI,gBACJC,MAAO,gBACPC,IAAK,kIAET,CACIF,GAAI,gBACJC,MAAO,sBACPC,IAAK,6GAET,CACIF,GAAI,gBACJC,MAAO,6BACPC,IAAK,6GAET,CACIF,GAAI,iBACJC,MAAO,gBACPC,IAAK,6GAET,CACIF,GAAI,gBACJC,MAAO,sBACPC,IAAK,6GAET,CACIF,GAAI,gBACJC,MAAO,gBACPC,IAAK,6GAET,CACIF,GAAI,qBACJC,MAAO,uCACPC,IAAK,8GC/CAC,EAAY,uCAAG,WAAOC,GAAP,yBAAAC,EAAA,6DAClBH,EADkB,gDAC6BI,UAAWF,GADxC,sDAGpBG,EAAU,GAHU,kBAMDC,MAAON,GANN,cAMdO,EANc,gBAOGA,EAAKC,OAPR,gBAOZC,EAPY,EAOZA,KACRJ,EAAUI,EARU,kDAUpBC,QAAQC,KAAR,MACAN,EAAUR,EAXU,eAelBe,EAAOP,EAAQQ,KAAK,SAAAC,GAAQ,IAAD,EAC7B,MAAO,CACHhB,GAAIgB,EAAIhB,GACRC,MAAOe,EAAIf,MACXC,IAAG,UAAEc,EAAIC,cAAN,aAAE,EAAYC,iBAAiBhB,QAnBlB,kBAuBjBY,GAvBiB,0DAAH,sDCAZK,EAAc,SAAC,GAAuB,EAArBnB,GAAsB,IAAlBC,EAAiB,EAAjBA,MAAOC,EAAU,EAAVA,IAErC,OACI,sBAAKkB,UAAU,yCAAf,UACI,qBAAKC,IAAMnB,EAAMoB,IAAMrB,IACvB,4BAAKA,QCHJsB,EAAU,SAAC,GAAkB,IAAhBnB,EAAe,EAAfA,SAItB,ECJwB,SAAEA,GAI1B,MAA0BlB,mBAAS,CAC/ByB,KAAM,GACNa,SAAS,IAFb,mBAAOC,EAAP,KAAcC,EAAd,KAgBA,OAXAC,qBAAU,WACNxB,EAAcC,GACTwB,MAAM,SAAAC,GACHH,EAAS,CACLf,KAAMkB,EACNL,SAAS,SAGtB,CAAEpB,IAGEqB,EDhB0BK,CAAc1B,GAAlCa,EAAb,EAAQN,KAAaa,EAArB,EAAqBA,QAQrB,OACI,qCACI,6BAAMpB,IAGFoB,GACA,mBAAGJ,UAAU,mCAAb,yBAIJ,qBAAKA,UAAU,YAAf,SAEQH,EAAOF,KAAK,SAAAC,GAAG,OACX,cAAC,EAAD,eAESA,GADCA,EAAIhB,aECvB+B,EA3BM,WAEjB,MAAoC7C,mBAAS,CAAC,cAA9C,mBAAOQ,EAAP,KAAmBT,EAAnB,KAEH,OACC,qCACC,+CACS,cAAC,EAAD,CAAaA,cAAgBA,IACtC,uBAIS,6BAGQS,EAAWqB,KAAK,SAAAX,GAAQ,OACpB,cAAC,EAAD,CAEIA,SAAWA,GADLA,Y,MCZlC4B,IAASC,OAAO,cAAC,EAAD,IAAkBC,SAASC,eAAe,W","file":"static/js/main.5f3c754d.chunk.js","sourcesContent":["import React, { useState } from 'react'\r\nimport PropTypes from 'prop-types';\r\n\r\nexport const AddCategory = ({ setCategories }) => {\r\n\r\n    const [inputValue, setInputValue] = useState('');\r\n\r\n    const handleOnChange = (e) => {\r\n        setInputValue(e.target.value);\r\n    };\r\n\r\n    const handleSubmit = (e) => {\r\n        // eslint-disable-next-line no-unused-expressions\r\n        e.preventDefault(); // Previene la recarga del navegador\r\n\r\n        if ( inputValue.trim().length > 2) {\r\n            setCategories( categories => [inputValue, ...categories]);\r\n            setInputValue('');\r\n        }\r\n    };\r\n\r\n    return (\r\n        <form onSubmit={ handleSubmit }>\r\n            <input \r\n                type=\"text\"\r\n                value={ inputValue }\r\n                onChange={ handleOnChange }\r\n            />\r\n            {/* <button type=\"submit\">Add category</button> */}\r\n        </form>\r\n    );\r\n};\r\n\r\nAddCategory.propTypes = {\r\n    setCategories: PropTypes.func.isRequired\r\n};","export const onePiece = [\r\n    {\r\n        id: \"YWB6Hi29vA3jG\",\r\n        title: \"one piece GIF\",\r\n        url: \"https://media2.giphy.com/media/YWB6Hi29vA3jG/giphy.gif?cid=6c9bffbf968t6tl9yfy5qhr4s75zbrp0msrl7fvfo4vzphes&rid=giphy.gif&ct=g\" \r\n    },\r\n    {\r\n        id: \"UTek0q3N8osh8agH4Y\",\r\n        title: \"One Piece GIF by TOEI Animation UK\",\r\n        url: \"https://media2.giphy.com/media/UTek0q3N8osh8agH4Y/giphy.gif?cid=6c9bffbf968t6tl9yfy5qhr4s75zbrp0msrl7fvfo4vzphes&rid=giphy.gif&ct=g\" \r\n    },\r\n    {\r\n        id: \"ghCX1B38YFXAwttIkg\",\r\n        title: \"One Piece Luffy Funny GIF by TOEI Animation UK\",\r\n        url: \"https://media3.giphy.com/media/ghCX1B38YFXAwttIkg/giphy.gif?cid=6c9bffbf968t6tl9yfy5qhr4s75zbrp0msrl7fvfo4vzphes&rid=giphy.gif&ct=g\" \r\n    },\r\n    {\r\n        id: \"rCdzKS756yiGs\",\r\n        title: \"one piece GIF\",\r\n        url: \"https://media1.giphy.com/media/rCdzKS756yiGs/giphy.gif?cid=6c9bffbf968t6tl9yfy5qhr4s75zbrp0msrl7fvfo4vzphes&rid=giphy.gif&ct=g\"\r\n    },\r\n    {\r\n        id: 'nQDKSeRlIyfmw',\r\n        title: 'one piece manga GIF',\r\n        url: 'https://media1.giphy.com/media/nQDKSeRlIyfmw/giphy…y5qhr4s75zbrp0msrl7fvfo4vzphes&rid=giphy.gif&ct=g'\r\n    },\r\n    {\r\n        id: 'tIZUToOMEFGM0',\r\n        title: 'one piece anime addict GIF',\r\n        url: 'https://media1.giphy.com/media/tIZUToOMEFGM0/giphy…y5qhr4s75zbrp0msrl7fvfo4vzphes&rid=giphy.gif&ct=g'\r\n    },\r\n    {\r\n        id: '118Hk8avxTssGQ',\r\n        title: 'one piece GIF',\r\n        url: 'https://media2.giphy.com/media/118Hk8avxTssGQ/giph…y5qhr4s75zbrp0msrl7fvfo4vzphes&rid=giphy.gif&ct=g'\r\n    },\r\n    {\r\n        id: 'cpkQpkVFOOoNi',\r\n        title: 'one piece otaku GIF',\r\n        url: 'https://media4.giphy.com/media/cpkQpkVFOOoNi/giphy…y5qhr4s75zbrp0msrl7fvfo4vzphes&rid=giphy.gif&ct=g'\r\n    },\r\n    {\r\n        id: '1rFG5pGCiUixq',\r\n        title: 'one piece GIF',\r\n        url: 'https://media2.giphy.com/media/1rFG5pGCiUixq/giphy…y5qhr4s75zbrp0msrl7fvfo4vzphes&rid=giphy.gif&ct=g'\r\n    },\r\n    {\r\n        id: 'xUOwG6wIogWVQ7BMWI',\r\n        title: 'one piece dancing GIF by LINDSEY L33',\r\n        url: 'https://media0.giphy.com/media/xUOwG6wIogWVQ7BMWI/…y5qhr4s75zbrp0msrl7fvfo4vzphes&rid=giphy.gif&ct=g'\r\n    },\r\n]","import { onePiece } from '../data/query';\r\n\r\nexport const getFetchGifs = async( category ) => {\r\n    const url = `http://api.giphy.com/v1/gifs/search?q=${encodeURI( category )}&limit=10&api_key=d3ZJ0gHQzxqgsKVHgVV71i3NEjGuTdUo`;\r\n    \r\n    let dataGif = [];\r\n\r\n    try { // Se coloca el try por los problemas de conexion\r\n        const resp = await fetch( url );\r\n        const { data } = await resp.json();\r\n        dataGif = data;\r\n    } catch(error) {\r\n        console.warn(error);\r\n        dataGif = onePiece;\r\n    }\r\n    \r\n\r\n    const gifs = dataGif.map( img => {\r\n        return {\r\n            id: img.id,\r\n            title: img.title,\r\n            url: img.images?.downsized_medium.url\r\n        }\r\n    });\r\n\r\n    return gifs;\r\n};","import React from 'react';\r\n\r\nexport const GifGridItem = ({ id, title, url }) => {\r\n\r\n    return (\r\n        <div className=\"card animate__animated animate__fadeIn\">\r\n            <img src={ url } alt={ title }/>\r\n            <p>{ title }</p>\r\n        </div>\r\n\r\n    );\r\n\r\n};","import React from 'react';\r\nimport { useFetchGifs } from '../hooks/useFetchGifs';\r\nimport { GifGridItem } from './GifGridItem';\r\n\r\nexport const GifGrid = ({ category }) => {\r\n\r\n    // const [images, setImages] = useState([]);\r\n\r\n    const { data:images, loading } = useFetchGifs( category );\r\n\r\n    // Hook que se dispara la primera vez y luego no se dispara hasta que el\r\n    // valor de 'category' cambia\r\n    // useEffect(() => {\r\n    //     getFetchGifs( category ).then( setImages );        \r\n    // }, [ category ]); \r\n    \r\n    return (\r\n        <>\r\n            <h2>{ category }</h2>\r\n               \r\n            { \r\n                loading && \r\n                <p className=\"animate__animated animate__flash\">\r\n                    Cargando...\r\n                </p> }\r\n\r\n            <div className=\"card-grid\">\r\n                {\r\n                    images.map( img => (\r\n                        <GifGridItem \r\n                            key={ img.id }\r\n                            { ...img }\r\n                        />\r\n                    ))\r\n                }\r\n            </div>\r\n        </>\r\n    );\r\n\r\n};","import { useEffect, useState } from \"react\";\r\nimport { getFetchGifs } from '../helpers/getFetchGifs';\r\n\r\n\r\nexport const useFetchGifs = ( category ) => {\r\n\r\n    // const [images, setImages] = useState([]);\r\n\r\n    const [state, setState] = useState({\r\n        data: [],\r\n        loading: true,\r\n    });\r\n\r\n    useEffect(() => {\r\n        getFetchGifs( category )\r\n            .then( imgs => {\r\n                setState({\r\n                    data: imgs,\r\n                    loading: false\r\n                });\r\n            });        \r\n    }, [ category ]); \r\n\r\n\r\n    return state; // { data: [], loading: true }\r\n};","import React, { useState } from 'react';\r\nimport { AddCategory } from './components/AddCategory';\r\nimport { GifGrid } from './components/GifGrid';\r\n\r\nconst GifExpertApp = () => {\r\n\r\n    const [categories, setCategories] = useState(['One Piece']);\r\n\r\n\treturn (\r\n\t\t<>\r\n\t\t\t<h2>GiftExpertApp</h2>\r\n            <AddCategory setCategories={ setCategories } />\r\n\t\t\t<hr />\r\n\r\n            {/* <button onClick={ handleAdd }>Add category</button> */}\r\n\r\n            <ol>\r\n                {\r\n                    // categories.map( category => <li key={ category }>{ category }</li>)\r\n                    categories.map( category => (\r\n                        <GifGrid \r\n                            key={ category }\r\n                            category={ category }\r\n                        />\r\n                    ))\r\n                }\r\n            </ol>\r\n\t\t</>\r\n\t);\r\n};\r\n\r\nexport default GifExpertApp;","import React from \"react\";\nimport ReactDOM from \"react-dom\";\n\nimport GifExpertApp from \"./GifExpertApp\";\n\nimport \"./index.css\";\n\n\n\nReactDOM.render(<GifExpertApp />, document.getElementById(\"root\"));\n\n\n"],"sourceRoot":""}